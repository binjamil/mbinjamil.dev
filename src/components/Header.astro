---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../consts";
---

<header>
  <div class="overlay">
    <div class="overlay-content">
      <HeaderLink href="/">Home</HeaderLink>
      <HeaderLink href="/writings">Writings</HeaderLink>
    </div>
    <button id="close-menu">
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M18 6L6 18"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
        <path
          d="M6 6L18 18"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
      </svg>
    </button>
  </div>
  <div class="container menu">
    <div class="logo-wrapper">
      <button id="hamburger">
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M4 12H20"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
          <path
            d="M4 6H20"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
          <path
            d="M4 18H20"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
        </svg>
      </button>
      <a href="/">
        <h2>
          {SITE_TITLE}
        </h2>
      </a>
    </div>
    <nav>
      <div class="links">
        <HeaderLink href="/">Home</HeaderLink>
        <HeaderLink href="/writings">Writings</HeaderLink>
      </div>
      <button id="themeToggle"
        ><svg
          width="22"
          height="22"
          viewBox="0 0 22 22"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g>
            <path
              class="sun"
              d="M11 14.6666C13.0251 14.6666 14.6667 13.025 14.6667 11C14.6667 8.97494 13.0251 7.33331 11 7.33331C8.975 7.33331 7.33337 8.97494 7.33337 11C7.33337 13.025 8.975 14.6666 11 14.6666Z"
              stroke="#0F172A"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
            <path
              class="sun"
              d="M11 1.83331V3.66665"
              stroke="#0F172A"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
            <path
              class="sun"
              d="M11 18.3333V20.1667"
              stroke="#0F172A"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
            <path
              class="sun"
              d="M4.51917 4.51917L5.81167 5.81167"
              stroke="#0F172A"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
            <path
              class="sun"
              d="M16.1884 16.1883L17.4809 17.4808"
              stroke="#0F172A"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
            <path
              class="sun"
              d="M1.83337 11H3.66671"
              stroke="#0F172A"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
            <path
              class="sun"
              d="M18.3334 11H20.1667"
              stroke="#0F172A"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
            <path
              class="sun"
              d="M5.81167 16.1883L4.51917 17.4808"
              stroke="#0F172A"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
            <path
              class="sun"
              d="M17.4809 4.51917L16.1884 5.81167"
              stroke="#0F172A"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
          </g>
          <path
            class="moon"
            d="M12 3C10.8134 4.19491 10.1488 5.81141 10.1518 7.49539C10.1547 9.17936 10.825 10.7935 12.0157 11.9843C13.2065 13.175 14.8206 13.8453 16.5046 13.8482C18.1886 13.8512 19.8051 13.1866 21 12C21 13.78 20.4722 15.5201 19.4832 17.0001C18.4943 18.4802 17.0887 19.6337 15.4442 20.3149C13.7996 20.9961 11.99 21.1743 10.2442 20.8271C8.49836 20.4798 6.89472 19.6226 5.63604 18.364C4.37737 17.1053 3.5202 15.5016 3.17294 13.7558C2.82567 12.01 3.0039 10.2004 3.68509 8.55585C4.36628 6.91131 5.51983 5.50571 6.99987 4.51677C8.47991 3.52784 10.22 3 12 3Z"
            stroke="#F8FAFC"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
        </svg>
      </button>
    </nav>
  </div>

  <style>
    header {
      border-bottom: 1px solid var(--clr-footer-border);
    }

    .menu {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding-block: 1rem;
    }

    .logo-wrapper {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    h2 {
      font-weight: normal;
      font-family: var(--ff-logo);
      font-size: var(--fs-logo);
      line-height: 38px;
    }

    nav {
      display: flex;
      align-items: center;
      gap: 1.5rem;
    }

    .links {
      display: flex;
      align-items: center;
      gap: 1.5rem;
    }

    a {
      border: none;
    }
    .sun {
      stroke: var(--clr-text-base);
    }
    .moon {
      stroke: transparent;
    }
    :global(.dark) .sun {
      stroke: transparent;
    }
    :global(.dark) .moon {
      stroke: var(--clr-text-base);
    }
    #hamburger svg,
    #close-menu svg {
      cursor: pointer;
      stroke: var(--clr-text-base);
    }
    #hamburger,
    #close-menu {
      display: none;
    }
    #themeToggle {
      cursor: pointer;
    }

    .overlay {
      position: fixed;
      height: 100%;
      width: 100%;
      z-index: 1;
      top: 0;
      left: 0;
      background-color: var(--clr-bg);
      overflow: hidden;
      display: none;
      justify-content: center;
      align-items: center;
    }
    .overlay-content {
      display: flex;
      flex-direction: column;
      font-size: var(--fs-600);
      font-family: var(--ff-headlines);
      justify-content: center;
      align-items: center;
    }
    #close-menu {
      position: absolute;
      top: 24px;
      left: 24px;
    }

    @media screen and (max-width: 768px) {
      .links {
        display: none;
      }
      #hamburger,
      #close-menu {
        display: block;
      }
    }
  </style>

  <script>
    function setup() {
      const hamburger = document.querySelector("#hamburger") as HTMLElement;
      const closeMenu = document.querySelector("#close-menu") as HTMLElement;
      const overlay = document.querySelector(".overlay") as HTMLElement;
      hamburger.addEventListener("click", () => {
        if (document.startViewTransition) {
          document.startViewTransition(() => {
            overlay.style.display = "flex";
          });
        } else {
          overlay.style.display = "flex";
        }
      });
      closeMenu.addEventListener("click", () => {
        if (document.startViewTransition) {
          document.startViewTransition(() => {
            overlay.style.display = "none";
          });
        } else {
          overlay.style.display = "none";
        }
      });

      const theme = (() => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme") as string;
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
      })();

      if (theme === "light") {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }

      window.localStorage.setItem("theme", theme);

      const handleToggleClick = () => {
        if (document.startViewTransition) {
          document.startViewTransition(() => {
            document.documentElement.classList.toggle("dark");
            const isDark = document.documentElement.classList.contains("dark");
            localStorage.setItem("theme", isDark ? "dark" : "light");
          });
        } else {
          document.documentElement.classList.toggle("dark");
          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        }
      };

      const themeToggler = document.getElementById("themeToggle");
      themeToggler?.addEventListener("click", handleToggleClick);
    }

    setup();
    document.addEventListener("astro:after-swap", setup);
  </script>
</header>
